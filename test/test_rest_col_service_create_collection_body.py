# coding: utf-8

"""
    RestCol API Documentations

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.rest_col_service_create_collection_body import RestColServiceCreateCollectionBody

class TestRestColServiceCreateCollectionBody(unittest.TestCase):
    """RestColServiceCreateCollectionBody unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RestColServiceCreateCollectionBody:
        """Test RestColServiceCreateCollectionBody
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RestColServiceCreateCollectionBody`
        """
        model = RestColServiceCreateCollectionBody()
        if include_optional:
            return RestColServiceCreateCollectionBody(
                collection_id = '',
                description = '',
                collection_type = 'COLLECTION_TYPE_NONE',
                schemas = [
                    openapi_client.models.api_schema_field.apiSchemaField(
                        name = '', 
                        datatype = 'SCHEMA_FIELD_DATA_TYPE_NONE', 
                        example = openapi_client.models.example.example(), )
                    ]
            )
        else:
            return RestColServiceCreateCollectionBody(
        )
        """

    def testRestColServiceCreateCollectionBody(self):
        """Test RestColServiceCreateCollectionBody"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
